<?php

/**
 * Implements hook_enable().
 */
function commerce_braintree_vzero_enable() {
  // If Card on File is already enabled, fetch its weight.
  $weight = db_select('system', 's')
    ->fields('s', array('weight'))
    ->condition('name', 'commerce_braintree_vzero', '=')
    ->execute()
    ->fetchField();

  // If it wasn't found, pick an arbitrary high weight.
  if ($weight === FALSE) {
    $weight = 1000;
  }

  db_update('system')
    ->fields(array(
      'weight' => $weight + 1,
    ))
    ->condition('type', 'module')
    ->condition('name', 'commerce_braintree_vzero')
    ->execute();
}

/**
 * Implements hook_requirements().
 *
 * Checks required BrainTree Libraries on Install
 */
function commerce_braintree_vzero_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break at install time.
  $t = get_t();

  // Test PHP version.
  if (version_compare(phpversion(), '5.2.1', '<')) {
    $requirements['php']['description'] = $t('Your PHP installation is too old. Braintree requires at least PHP %version.', array('%version' => '5.2.1'));
    $requirements['php']['severity'] = REQUIREMENT_ERROR;
  }

  // Test Required PHP Extensions.
  $requiredExtensions = array(
    'xmlwriter',
    'SimpleXML',
    'openssl',
    'dom',
    'hash',
    'curl'
  );
  $disabled_extensions = array();

  $value = '';
  foreach ($requiredExtensions as $ext) {
    $ext_enabled = extension_loaded($ext) ? 'Enabled' : 'Disabled';

    $value .= $ext . ': ' . $ext_enabled . ' ';

    if ($ext_enabled == 'Disabled') {
      $disabled_extensions[] = $ext;
    }
  }

  $requirements['commerce_braintree_vzero_php_extensions'] = array(
      'title' => $t('Braintree PHP Extensions'),
      'value' => ($phase == 'install') ? '' : $value
  );

  if ($disabled_extensions) {
    $requirements['commerce_braintree_vzero_php_extensions']['severity'] = REQUIREMENT_ERROR;
    $requirements['commerce_braintree_vzero_php_extensions']['description'] = $t('The following PHP extensions must be enabled for Braintree: ' . implode(', ', $disabled_extensions));
  }

  if ($phase == 'runtime') {
    $t = get_t();
    // Check for the Braintree PHP library.
    if (file_exists(libraries_get_path('braintree_php') . '/lib/Braintree.php')) {
      $requirements['commerce_braintree_php'] = array(
        'value' => $t('Installed'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['commerce_braintree_php'] = array(
        'value' => $t('Missing!'),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('Braintree library missing. Download the Braintree library from <a href="@url">https://github.com/braintree/braintree_php</a> and place it in to sites/all/libraries/braintree_php', array('@url' => 'https://github.com/braintree/braintree_php')),
      );
    }
    $requirements['commerce_braintree_php']['title'] = $t('Braintree PHP library');

    // Check for Commerce currency.
    if (in_array(commerce_default_currency(), array('USD', 'CAD', 'EUR', 'GBP', 'AUD', 'CHF'))) {
      $requirements['commerce_braintree_currency'] = array(
        'value' => $t('Valid currency'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['commerce_braintree_currency'] = array(
        'value' => $t('Invalid default currency!'),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('Braintree currently supports only USD, CAD, EUR, GBP, AUD and CHF as a currency.'),
      );
    }
    $requirements['commerce_braintree_currency']['title'] = $t('Braintree currency check');
  }

  return $requirements;
}
